@model Report
@{
    var title = "تقارير مشتريات المستلزمات";
    ViewData["Title"] = title;
    string data = JsonConvert.SerializeObject(Model);
}

<div id="app" class="container mx-auto px-4 py-6">
    <!-- Page Header -->
    <div class="flex justify-between items-center mb-8 mt-4">
        <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none"
                stroke="#000000" stroke-width="2" class="stroke-[#212b36]" stroke-linecap="round"
                stroke-linejoin="round">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                <polyline points="14 2 14 8 20 8"></polyline>
                <line x1="16" y1="13" x2="8" y2="13"></line>
                <line x1="16" y1="17" x2="8" y2="17"></line>
                <polyline points="10 9 9 9 8 9"></polyline>
            </svg>
            <h1 class="text-2xl text-[#212b36] font-bold">{{ Title }}</h1>
        </div>
    </div>

    <!-- Search Form Card -->
    <div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
        <div class="bg-primary text-white px-6 py-4 flex items-center gap-2">
            <i class="fas fa-list-ol"></i>
            <h2 class="text-lg font-semibold">{{ Title }}</h2>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 items-center">
                <div class="flex items-center gap-2">
                    <label class="w-1/4 text-sm font-medium text-gray-700">من</label>
                    <input type="date" v-model="SearchDate.StartDate"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                <div class="flex items-center gap-2">
                    <label class="w-1/4 text-sm font-medium text-gray-700">الى</label>
                    <input type="date" v-model="SearchDate.EndDate"
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                <div>
                    <button @@click="LoadReport"
                        class="w-full bg-emerald-800 hover:bg-emerald-700 text-white px-4 py-2 rounded-lg transition-colors h-[48px]">
                        عرض التقرير
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Card -->
    <div v-if="Purchasings.length > 0" class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
        <div class="bg-primary text-white px-6 py-4 flex items-center gap-2">
            <i class="fas fa-list-ol"></i>
            <h2 class="text-lg font-semibold">{{ Title }}</h2>
        </div>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-right">اسم المورد</th>
                        <th class="px-6 py-3 text-right">التاريخ</th>
                        <th class="px-6 py-3 text-right">الكمية</th>
                        <th class="px-6 py-3 text-right">رقم الفاتورة</th>
                        <th class="px-6 py-3 text-right">الإجراءات</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <tr v-for="(purchase, index) in Purchasings" :key="index">
                        <td class="px-6 py-4">{{ purchase.SupplierName }}</td>
                        <td class="px-6 py-4 whitespace-nowrap">{{ purchase.PurchasingDate }}</td>
                        <td class="px-6 py-4 whitespace-nowrap">{{ FormatNumber(purchase.AmountStoreItem) }}</td>
                        <td class="px-6 py-4 whitespace-nowrap">{{ purchase.InvoiceNum }}</td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <a :href="'/Purchases/Home/DetailsPurchase/' + purchase.Id" target="_blank"
                                class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-sm">
                                تفاصيل
                            </a>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Messages Modal -->
    <MessagesModal :Messages="Messages" @@ClearMessages="ClearMessages" />
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/3.3.4/vue.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script type="module">
        const { createApp, reactive, ref } = Vue;

        // Messages Component
        const MessagesModal = {
            props: {
                Messages: Array
            },
            emits: ['ClearMessages'],
            template: `
                            <div v-if="Messages.length > 0" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
                                <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
                                    <div class="p-4 border-b border-gray-200 flex justify-between items-center">
                                        <h3 class="text-lg font-medium text-gray-900">رسائل</h3>
                                        <button @@click="$emit('ClearMessages')" class="text-gray-500 hover:text-gray-700">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                            </svg>
                                        </button>
                                    </div>
                                    <div class="p-4">
                                        <ul class="space-y-2">
                                            <li v-for="(message, index) in Messages" :key="index" class="text-red-600 text-sm">{{ message }}</li>
                                        </ul>
                                    </div>
                                    <div class="p-4 border-t border-gray-200 flex justify-end">
                                        <button @@click="$emit('ClearMessages')" class="px-4 py-2 bg-blue-800 text-white rounded-md hover:bg-blue-900">
                                            موافق
                                        </button>
                                    </div>
                                </div>
                            </div>
                        `
        };

        createApp({
            components: {
                MessagesModal
            },
            data() {
                return {
                    Title: "تقارير مشتريات المستلزمات",
                    Purchasings: [],
                    SearchDate: reactive({
                        StartDate: '',
                        EndDate: ''
                    }),
                    Messages: []
                };
            },
            created() {
                // Initialize with server data if available
                const initialData = @Html.Raw(data);
                if (initialData) {
                    this.Purchasings = initialData.Purchasings || [];
                    this.SearchDate.StartDate = initialData.SearchDate?.StartDate || '';
                    this.SearchDate.EndDate = initialData.SearchDate?.EndDate || '';
                }
            },
            methods: {
                async LoadReport() {
                    this.Messages = [];

                    // Validate inputs
                    if (!this.SearchDate.StartDate || !this.SearchDate.EndDate) {
                        this.Messages.push('يجب تحديد تاريخ البداية والنهاية');
                        return;
                    }

                    if (new Date(this.SearchDate.StartDate) > new Date(this.SearchDate.EndDate)) {
                        this.Messages.push('تاريخ البداية يجب أن يكون قبل تاريخ النهاية');
                        return;
                    }

                    try {
                        const response = await axios.post('/Purchases/Reports/LoadReport', this.SearchDate);
                        this.Purchasings = response.data.Purchasings || [];

                        if (this.Purchasings.length === 0) {
                            this.Messages.push('لا توجد نتائج للعرض في الفترة المحددة');
                        }
                    } catch (error) {
                        console.error('Error loading report:', error);
                        this.Messages.push('حدث خطأ أثناء تحميل التقرير');
                    }
                },
                FormatNumber(value) {
                    if (value === null || value === undefined || value === '') {
                        return '0';
                    }
                    return parseFloat(value).toLocaleString('ar-EG');
                },
                ClearMessages() {
                    this.Messages = [];
                }
            }
        }).mount('#app');
    </script>
}