@model PurchaseContainer
@{
    var title = "تفاصيل اذن اضافة خامات";
    ViewData["Title"] = title;
    string data = JsonConvert.SerializeObject(Model);
}

<div id="app" class="container mx-auto px-4 py-6">
    <!-- Page Title -->
    <div class="flex justify-between items-center mb-8 mt-4">
        <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" class="stroke-[#212b36]" viewBox="0 0 24 24"
                fill="none" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <h1 class="text-2xl text-[#212b36] font-bold">{{ title }}</h1>
        </div>
        <a href="@((Context.Request.Headers["Referer"].ToString() != string.Empty) ? Context.Request.Headers["Referer"].ToString() : Url.Action("Index", "Purchase", new { area = "Purchase" }))"
            class="bg-[#212b36] hover:bg-[#222] text-white px-4 py-2 rounded-lg inline-flex items-center gap-2 transition-colors">
            رجوع
            <i class="fa fa-arrow-left"></i>
        </a>
    </div>

    <!-- Supplier Information Card -->
    <div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
        <div class="bg-primary text-white px-6 py-4 flex items-center gap-2">
            <i class="fas fa-list-ol"></i>
            <h2 class="text-lg font-semibold">بيانات المورد</h2>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">اسم المورد</label>
                    <input v-model="supplier.SupplierName" disabled
                        class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">التليفون</label>
                    <input v-model="supplier.Phone1" disabled
                        class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100">
                </div>
            </div>
        </div>
    </div>

    <!-- Materials Storage Details Card -->
    <div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
        <div class="bg-primary text-white px-6 py-4 flex items-center gap-2">
            <i class="fas fa-list-ol"></i>
            <h2 class="text-lg font-semibold">تفاصيل عملية تخزين المستلزمات</h2>
        </div>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-primary text-white">
                    <tr>
                        <th class="px-6 py-3 text-right">اسم العنصر</th>
                        <th class="px-6 py-3 text-right">الكمية</th>
                        <th class="px-6 py-3 text-right" style="width:15%">سعر الوحدة</th>
                        <th class="px-6 py-3 text-right">السعر الإجمالي</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <tr v-for="(item, index) in purchaseDetails" :key="'detail-'+index">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm font-medium text-gray-900">{{ item.StoreItemName }}</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm text-gray-900">{{ item.Qty }}</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm text-gray-900">{{ item.UnitPrice }}</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm text-gray-900">{{ item.Qty * item.UnitPrice}}</span>
                        </td>
                    </tr>
                    <tr v-if="purchaseDetails.length === 0">
                        <td colspan="4" class="text-center text-lg text-gray-500 py-6">لا توجد تفاصيل للعرض</td>
                    </tr>
                </tbody>
                <tfoot class="bg-gray-50">
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap"></td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm font-bold text-gray-900">{{ purchaseDetails.reduce((accumulator,
                                currentValue) => accumulator + currentValue.Qty, 0) }}</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm font-bold text-gray-900">الاجمالي</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm font-bold text-gray-900">{{ purchaseDetails.reduce((accumulator,
                                currentValue) => accumulator + (currentValue.UnitPrice * currentValue.Qty), 0)
                                }}</span>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <!-- Product Storage Details Card -->
    <div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
        <div class="bg-primary text-white px-6 py-4 flex items-center gap-2">
            <i class="fas fa-list-ol"></i>
            <h2 class="text-lg font-semibold">تفاصيل عملية تخزين المستلزمات لمنتج</h2>
        </div>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-primary text-white">
                    <tr>
                        <th class="px-6 py-3 text-right">اسم المنتج</th>
                        <th class="px-6 py-3 text-right">الكمية</th>
                        <th class="px-6 py-3 text-right" style="width:15%">سعر الوحدة</th>
                        <th class="px-6 py-3 text-right">السعر الإجمالي</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <tr v-for="(item, index) in purchaseStoreItemDetails" :key="'store-item-'+index">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm font-medium text-gray-900">{{ item.StoreItemName }}</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm text-gray-900">{{ item.Qty }}</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm text-gray-900">{{ (item.UnitPrice) }}</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm text-gray-900">{{ (item.Qty * item.UnitPrice) }}</span>
                        </td>
                    </tr>
                    <tr v-if="purchaseStoreItemDetails.length === 0">
                        <td colspan="4" class="text-center text-lg text-gray-500 py-6">لا توجد تفاصيل للعرض</td>
                    </tr>
                </tbody>
                <tfoot class="bg-gray-50">
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap"></td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm font-bold text-gray-900">{{
                                (purchaseStoreItemDetails.reduce((accumulator,
                                currentValue) => accumulator + currentValue.Qty, 0))
                                }}</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm font-bold text-gray-900">الاجمالي</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="text-sm font-bold text-gray-900">{{
                                (purchaseStoreItemDetails.reduce((accumulator,
                                currentValue) => accumulator + (currentValue.UnitPrice * currentValue.Qty), 0))
                                }}</span>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <!-- Storage Summary Card -->
    <div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
        <div class="bg-primary text-white px-6 py-4 flex items-center gap-2">
            <i class="fas fa-list-ol"></i>
            <h2 class="text-lg font-semibold">ملخص عملية التخزين</h2>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">تاريخ الفاتورة</label>
                    <span class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 block">{{
                        purchaseInfo.PurchasingDate }}</span>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">رقم الفاتورة</label>
                    <span class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 block">{{
                        purchaseInfo.InvoiceNum || 'غير متاح' }}</span>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/vue@3.2.47/dist/vue.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script type="text/javascript">
        // Initialize data from server
        var initialData = @Html.Raw(data);

        console.log(initialData);

        const { createApp } = Vue;

        createApp({
            data() {
                return {
                    title: "تفاصيل اذن اضافة خامات",
                    supplier: initialData.Supplier || {},
                    purchaseDetails: initialData.PurchaseDetails || [],
                    purchaseStoreItemDetails: initialData.PurchaseStoreItemDetails || [],
                    purchaseInfo: initialData.PurchaseInfo || {},
                };
            }
        }).mount('#app');
    </script>
}