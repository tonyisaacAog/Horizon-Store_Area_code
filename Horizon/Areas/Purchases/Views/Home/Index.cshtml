@model List<PurchasingVM>
@{
    var title = "اذون خامات ومستلزمات عامة";
    ViewData["Title"] = title;
    string data = JsonConvert.SerializeObject(Model);
}

<div id="app" class="container mx-auto px-4 py-6">
    <!-- Card Header -->
    <div class="flex justify-between items-center mb-8 mt-4">
        <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none"
                stroke="#000000" stroke-width="2" class="stroke-[#212b36]" stroke-linecap="round"
                stroke-linejoin="round">
                <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
                <path d="M9 12l2 2l4 -4" />
            </svg>
            <h1 class="text-2xl text-[#212b36] font-bold">{{ title }}</h1>
        </div>
    </div>

    <!-- Card Body -->
    <data-table :columns="columns" :data="purchases" :searchable="true" :sortable="true" :paginated="true"
        :per-page-options="[5, 10, 25, 50]" :default-per-page="10" search-placeholder="البحث في إذون الخامات..."
        no-data-message="لا توجد بيانات" @@row-action="handleRowAction" @@row-click="handleRowClick"
        @@search-change="handleSearchChange" @@sort-change="handleSortChange" @@page-change="handlePageChange"
        ref="purchasesTable">
    </data-table>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/3.3.4/vue.global.min.js"></script>
    <!-- Import the separated component -->
    <script type="module">
        import { DataTable } from '/assets/components/DataTable.js?v=2.6';

        const { createApp } = Vue;

        createApp({
            components: {
                DataTable
            },
            data() {
                return {
                    title: 'اذون خامات ومستلزمات عامة',
                    purchases: @Html.Raw(data),
                    totalPurchases: 0,
                    searchResults: 0,
                    currentPage: 1,
                    columns: [
                        {
                            key: 'InvoiceNum',
                            label: 'رقم الفاتورة',
                            sortable: true,
                            searchable: true
                        },
                        {
                            key: 'PurchasingDate',
                            label: 'التاريخ',
                            sortable: true
                        },
                        {
                            key: 'TotalAmount',
                            label: 'السعر الإجمالي',
                            sortable: true,
                            format: (value) => {
                                if (value === null || value === undefined || value === '') return '0';
                                return parseFloat(value).toLocaleString('ar-EG');
                            }
                        },
                        {
                            key: 'SupplierName',
                            label: 'اسم المورد',
                            sortable: true,
                            searchable: true
                        },
                        {
                            key: 'actions',
                            label: 'الإجراءات',
                            type: 'actions',
                            width: 'w-1/6',
                            actions: [
                                {
                                    key: 'details',
                                    label: 'تفاصيل الفاتورة',
                                    icon: 'fa-info-circle',
                                    class: 'bg-blue-600 hover:bg-blue-700 text-white'
                                }
                            ]
                        }
                    ]
                }
            },
            mounted() {
                this.totalPurchases = this.purchases.length;
                this.searchResults = this.purchases.length;
            },
            methods: {
                handleRowAction(event) {
                    const { action, item } = event;

                    switch (action) {
                        case 'details':
                            window.location.href = `/Purchases/Home/GetDetailsPurchase/${item.Id}`;
                            break;
                    }
                },

                handleRowClick(item) {
                    console.log('Row clicked:', item);
                },

                handleSearchChange(event) {
                    this.searchResults = event.results;
                },

                handleSortChange(event) {
                    console.log('Sort changed:', event);
                },

                handlePageChange(event) {
                    this.currentPage = event.page;
                }
            }
        }).mount('#app');
    </script>
}