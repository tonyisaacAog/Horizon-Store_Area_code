@using Horizon.Areas.Purchases.ViewModel.PurchaseOrderVMs;
@model PurchaseOrderVM
@{
    var title = "امر انتاج";
    ViewData["Title"] = title;
    string data = JsonConvert.SerializeObject(Model);
}

<div id="app" class="container mx-auto px-4 py-6">
    <!-- Messages Component -->
    <messages :messages="messages" @@clear-messages="clearMessages"></messages>

    <!-- Page Title -->
    <div class="flex justify-between items-center mb-8 mt-4">
        <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" class="stroke-[#212b36]" viewBox="0 0 24 24"
                fill="none" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path
                    d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z">
                </path>
            </svg>
            <h1 class="text-2xl text-[#212b36] font-bold">{{ title }}</h1>
        </div>
        <a href="@((Context.Request.Headers["Referer"].ToString() != string.Empty) ? Context.Request.Headers["Referer"].ToString() : Url.Action("Index", "PurchaseOrder", new { area = "Purchases" }))"
            class="bg-[#212b36] hover:bg-[#222] text-white px-4 py-2 rounded-lg inline-flex items-center gap-2 transition-colors">
            رجوع
            <i class="fa fa-arrow-left"></i>
        </a>
    </div>

    <!-- Purchase Order Information Card -->
    <div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
        <div class=" text-white px-6 py-4 flex items-center border-b">

            <h2 class="text-lg font-semibold">بيانات امر الانتاج</h2>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">اسم المورد</label>
                    <div
                        class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 h-[48px] flex items-center">
                        {{ purchaseOrder.SupplierName }}
                    </div>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">رقم امر الانتاج</label>
                    <div
                        class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 h-[48px] flex items-center">
                        {{ purchaseOrder.PurchaseOrderNumber }}
                    </div>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">تاريخ امر الانتاج</label>
                    <div
                        class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 h-[48px] flex items-center">
                        {{ formatDate(purchaseOrder.PurchaseOrderDate) }}
                    </div>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">تاريخ توريد امر الانتاج</label>
                    <div
                        class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 h-[48px] flex items-center">
                        {{ formatDate(purchaseOrder.DeliveryDate) }}
                    </div>
                </div>
                <div class="md:col-span-2">
                    <label class="block text-sm font-medium text-gray-700 mb-1">الكمية</label>
                    <div
                        class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 h-[48px] flex items-center">
                        {{ formatNumber(purchaseOrder.TotalAmount) }}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Purchase Order Details Card -->
    <div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
        <div class=" text-white px-6 py-4 flex items-center border-b">

            <h2 class="text-lg font-semibold">تفاصيل امر الانتاج</h2>
        </div>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50 text-gray-900">
                    <tr>
                        <th class="px-6 py-3 text-right font-medium">المنتج</th>
                        <th class="px-6 py-3 text-right font-medium" style="width:10%">الكمية</th>
                        <th class="px-6 py-3 text-right font-medium">ملاحظات</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <tr v-for="(detail, index) in visiblePurchaseOrderDetails" :key="'detail-'+index"
                        class="hover:bg-gray-50">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div
                                class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 h-[48px] flex items-center">
                                {{ detail.StoreItemName }}
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div
                                class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 h-[48px] flex items-center">
                                {{ formatNumber(detail.StoreItemAmount) }}
                            </div>
                        </td>
                        <td class="px-6 py-4">
                            <textarea rows="1" readonly
                                class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 resize-none"
                                :value="detail.Notes"></textarea>
                        </td>
                    </tr>
                    <tr v-if="visiblePurchaseOrderDetails.length === 0">
                        <td colspan="3" class="text-center text-lg text-gray-500 py-6">لا توجد تفاصيل للعرض</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Purchase Order Notes Card -->
    <div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
        <div class=" text-white px-6 py-4 flex items-center border-b">

            <h2 class="text-lg font-semibold">ملاحظات امر الانتاج</h2>
        </div>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50 text-gray-900">
                    <tr>
                        <th class="px-6 py-3 text-right font-medium">#</th>
                        <th class="px-6 py-3 text-right font-medium">ملاحظات</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <tr v-for="(note, index) in purchaseOrder.Notes" :key="'note-'+index" class="hover:bg-gray-50">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div
                                class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 h-[48px] flex items-center">
                                {{ index + 1 }}
                            </div>
                        </td>
                        <td class="px-6 py-4">
                            <textarea rows="1" readonly
                                class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 resize-none"
                                :value="note.Note"></textarea>
                        </td>
                    </tr>
                    <tr v-if="!purchaseOrder.Notes || purchaseOrder.Notes.length === 0">
                        <td colspan="2" class="text-center text-lg text-gray-500 py-6">لا توجد ملاحظات للعرض</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Actions Card -->
    <div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
        <div class="p-6">
            <div class="flex justify-end">
                <a :href="'/Purchases/PurchaseOrder/PrintPurchaseOrder/' + purchaseOrder.Id"
                    class="bg-gray-600 hover:bg-gray-700 text-white px-6 py-2 rounded-md flex items-center gap-2 transition-colors">
                    <i class="fas fa-print"></i>
                    طباعة امر الانتاج
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/vue@3.2.47/dist/vue.global.min.js"></script>
    <script type="text/javascript">
        // Initialize data from server
        var initialData = @Html.Raw(data);

        // Messages Component
        const Messages = {
            template: `
                            <div v-if="messages.length > 0" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
                                <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
                                    <div class="p-4 border-b border-gray-200 flex justify-between items-center">
                                        <h3 class="text-lg font-medium text-gray-900">رسائل</h3>
                                        <button @@click="$emit('clear-messages')" class="text-gray-500 hover:text-gray-700">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                            </svg>
                                        </button>
                                    </div>
                                    <div class="p-4">
                                        <ul class="space-y-2">
                                            <li v-for="(message, index) in messages" :key="index" class="text-red-600 text-sm">{{ message }}</li>
                                        </ul>
                                    </div>
                                    <div class="p-4 border-t border-gray-200 flex justify-end">
                                        <button @@click="$emit('clear-messages')" class="px-4 py-2 bg-blue-800 text-white rounded-md hover:bg-blue-900">
                                            موافق
                                        </button>
                                    </div>
                                </div>
                            </div>
                        `,
            props: ['messages'],
            emits: ['clear-messages']
        };

        const { createApp } = Vue;

        createApp({
            components: {
                Messages
            },
            data() {
                return {
                    title: "امر انتاج",
                    purchaseOrder: initialData,
                    messages: []
                };
            },
            computed: {
                visiblePurchaseOrderDetails() {
                    if (!this.purchaseOrder.PurchaseOrderDetails) return [];
                    return this.purchaseOrder.PurchaseOrderDetails.filter(detail => detail.RecordStatus !== 2);
                }
            },
            methods: {
                clearMessages() {
                    this.messages = [];
                },
                formatNumber(value) {
                    if (!value) return '0';
                    return parseFloat(value).toFixed(2);
                },
                formatDate(dateString) {
                    if (!dateString) return '';

                    // Try to parse custom format DD/MM/YYYY
                    const parts = dateString.split('/');
                    if (parts.length === 3) {
                        const day = parts[0];
                        const month = parts[1];
                        const year = parts[2];

                        // Rearrange to YYYY-MM-DD for safe parsing
                        const isoString = `${year}-${month}-${day}`;
                        const date = new Date(isoString);

                        if (isNaN(date)) return 'تاريخ غير صالح';

                        return date.toLocaleDateString('ar-EG');
                    }

                    // Fallback to native parsing
                    const date = new Date(dateString);
                    return isNaN(date) ? 'تاريخ غير صالح' : date.toLocaleDateString('ar-EG');
                }
            }
        }).mount('#app');
    </script>
}