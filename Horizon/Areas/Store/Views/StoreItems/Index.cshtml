@model List<StoreItemVM>
@{
    var title = "قائمة المنتجات";
    ViewData["Title"] = title;
    string data = JsonConvert.SerializeObject(Model);
}

<div id="app" class="container mx-auto px-4 py-6">
    <!-- Card Header -->
    <div class="flex justify-between items-center mb-8 mt-4">
        <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none"
                stroke="#000000" stroke-width="2" class="stroke-[#212b36]" stroke-linecap="round"
                stroke-linejoin="round">
                <path d="M12 3l8 4.5l0 9l-8 4.5l-8 -4.5l0 -9l8 -4.5" />
                <path d="M12 12l8 -4.5" />
                <path d="M12 12l0 9" />
                <path d="M12 12l-8 -4.5" />
            </svg>

            <h1 class="text-2xl text-[#212b36] font-bold">{{ title }}</h1>
        </div>
        <a href="/Store/StoreItems/ManageRecord/0"
            class="bg-[#212b36] hover:bg-[#222] text-white px-4 py-2 rounded-lg inline-flex items-center gap-2 transition-colors">
            <i class="fa fa-plus"></i>
            اضافة منتج
        </a>
    </div>

    <!-- Card Body -->
    <data-table :columns="columns" :data="items" :searchable="true" :sortable="true" :paginated="true"
        :per-page-options="[5, 10, 25, 50]" :default-per-page="10" search-placeholder="البحث في المنتجات..."
        no-data-message="لا توجد بيانات" @@row-action="handleRowAction" @@row-click="handleRowClick"
        @@search-change="handleSearchChange" @@sort-change="handleSortChange" @@page-change="handlePageChange"
        ref="itemsTable">
    </data-table>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/3.3.4/vue.global.min.js"></script>
    <!-- Import the separated component -->
    <script type="module">
        import { DataTable } from '/assets/components/DataTable.js?v=2.6';

        const { createApp } = Vue;

        createApp({
            components: {
                DataTable
            },
            data() {
                return {
                    title: 'قائمة المنتجات',
                    items: @Html.Raw(data),
                    totalItems: 0,
                    searchResults: 0,
                    currentPage: 1,
                    columns: [
                        {
                            key: 'ProductName',
                            label: 'اسم المنتج',
                            sortable: true,
                            searchable: true,
                            width: 'w-1/8'
                        },
                        {
                            key: 'ProductNameAr',
                            label: 'اسم المنتج عربى',
                            sortable: true,
                            searchable: true,
                            width: 'w-1/8'
                        },
                        {
                            key: 'ItemCode',
                            label: 'كود المنتج',
                            sortable: true,
                            searchable: true,
                            width: 'w-1/8'
                        },
                        {
                            key: 'CurrentQty',
                            label: 'الكمية',
                            sortable: true,
                            searchable: true,
                            width: 'w-1/12'
                        },
                        {
                            key: 'DestroyedQty',
                            label: 'التالف',
                            sortable: true,
                            searchable: true,
                            width: 'w-1/12'
                        },
                        {
                            key: 'actions',
                            label: 'الإجراءات',
                            type: 'actions',
                            width: 'w-1/2',
                            actions: [
                                {
                                    key: 'edit',
                                    label: 'تعديل',
                                    icon: 'fa-edit',
                                    class: 'bg-blue-600 hover:bg-blue-700 text-white'
                                },
                                {
                                    key: 'configuration',
                                    label: 'مكونات الراك',
                                    icon: 'fa-cog',
                                    class: 'bg-indigo-600 hover:bg-indigo-700 text-white'
                                },
                                {
                                    key: 'manufacturing',
                                    label: 'امر تجميع',
                                    icon: 'fa-industry',
                                    class: 'bg-green-600 hover:bg-green-700 text-white'
                                },
                                {
                                    key: 'report',
                                    label: 'كارت صنف',
                                    icon: 'fa-file-alt',
                                    class: 'bg-gray-600 hover:bg-gray-700 text-white'
                                },
                                {
                                    key: 'purchase',
                                    label: 'اذن اضافة خامات',
                                    icon: 'fa-plus-circle',
                                    class: 'bg-teal-600 hover:bg-teal-700 text-white'
                                },
                                {
                                    key: 'destroy',
                                    label: 'اذن تالف',
                                    icon: 'fa-trash-alt',
                                    class: 'bg-red-600 hover:bg-red-700 text-white'
                                },
                                {
                                    key: 'inquery',
                                    label: 'استعلام نواقص الراك',
                                    icon: 'fa-search',
                                    class: 'bg-yellow-600 hover:bg-yellow-700 text-white'
                                }
                            ]
                        }
                    ]
                }
            },
            mounted() {
                this.totalItems = this.items.length;
                this.searchResults = this.items.length;
            },
            methods: {
                handleRowAction(event) {
                    const { action, item } = event;

                    switch (action) {
                        case 'edit':
                            window.location.href = `/Store/StoreItems/ManageRecord/${item.Id}`;
                            break;
                        case 'configuration':
                            window.location.href = `/Store/ItemConfiguration/ManageConfiguration/${item.Id}`;
                            break;
                        case 'manufacturing':
                            window.location.href = `/Manufacturing/Home/Index/${item.Id}`;
                            break;
                        case 'report':
                            window.location.href = `/Store/Reports/Index/${item.Id}`;
                            break;
                        case 'purchase':
                            window.location.href = `/Purchases/Home/ManagePurchaseForProduct/${item.Id}`;
                            break;
                        case 'destroy':
                            window.location.href = `/Store/StoreItems/ManageDestoryAmount/${item.Id}`;
                            break;
                        case 'inquery':
                            window.location.href = `/Store/StoreItems/InqueryPurchaseForProduct/${item.Id}`;
                            break;
                    }
                },

                handleRowClick(item) {
                    console.log('Row clicked:', item);
                    // You can add row click behavior here
                },

                handleSearchChange(event) {
                    this.searchResults = event.results;
                },

                handleSortChange(event) {
                    console.log('Sort changed:', event);
                },

                handlePageChange(event) {
                    this.currentPage = event.page;
                }
            }
        }).mount('#app');
    </script>
}